{"version":3,"sources":["view/components/FeedItem/FeedContent/PostImage.js","view/components/FeedItem/FeedContent/PostText.js","view/components/FeedItem/FeedContent/PostVideo.js","shared/createFeedContent.js","view/components/FeedItem/FeedItem.js","view/components/FeedList/FeedList.js","shared/constants.js","models/Post.js","models/VideoPost.js","models/ImagePost.js","models/TextPost.js","shared/headers.js","services/post-service/postService.js","models/User.js","services/user-service/user-service.js","services/validation-service/validationService.js","view/components/CreatePost/Modals/ImageModal.js","view/components/CreatePost/Modals/TextModal.js","view/components/CreatePost/Modals/VideoModal.js","view/components/CreatePost/CreatePost.js","view/pages/FeedPage.js","view/pages/PeoplePage/PeopleItem.js","view/pages/PeoplePage/PeopleList.js","view/pages/PeoplePage/SearchBar.js","view/pages/PeoplePage/PeoplePage.js","view/components/EditProfile/EditProfile.js","view/pages/ProfilePage/ProfilePage.js","models/Comment.js","services/comment-service/commentService.js","view/components/CommentInput/CommentInput.js","view/components/CommentItem/CommentItem.js","view/components/CommentList/CommentList.js","view/pages/SinglePostPage.js","view/components/Header/Header.js","view/components/Footer/Footer.js","services/login-service/login-service.js","view/components/Login/Login.js","services/register-service/register-service.js","view/components/Register/Register.js","view/pages/LoginAndRegister/LoginAndRegister.js","index.js","view/App.js"],"names":["PostImage","_ref","imageUrl","post","react_default","a","createElement","className","src","alt","PostText","text","PostVideo","videoUrl","allowFullScreen","title","createFeedContent","isImage","PostImage_PostImage","isVideo","PostVideo_PostVideo","PostText_PostText","FeedItem","commentsNum","id","type","userId","Link","to","concat","getCapitalType","FeedList","posts","Fragment","map","FeedItem_FeedItem_FeedItem","key","BASE_ENDPOINT","Post","dateCreated","userDisplayName","Object","classCallCheck","this","charAt","toUpperCase","slice","VideoPost","_this","possibleConstructorReturn","getPrototypeOf","call","ImagePost","TextPost","headers","method","Content-Type","Key","SessionId","sessionStorage","getItem","data","body","JSON","stringify","postService","deletePost","postId","DELETE_POST_ENDPOINT","fetch","deleteRequestHeader","POSTS_ENDPOINT","getRequestHeader","then","response","json","result","filter","includes","Error","postType","queryParam","postRequestHeader","User","image","arguments","length","undefined","name","description","postNumber","commentNumber","lastPostDate","email","year","getFullYear","day","getDate","month","getMonth","currentYear","Date","currentDay","currentMonth","toLocaleTimeString","split","join","toLocaleString","userService","profile","avatarUrl","about","postsCount","commentsCount","userList","user","aboutShort","dateObj","SINGLE_USER_BASE","putRequestHeader","validationService","isTextCorrect","isImageUrlCorrect","url","splitUrl","imageFormat","toLowerCase","startsWith","isVideoUrlCorrect","isNameCorrect","ImageModal","props","createPostHandler","payload","state","inputValue","createPost","loadPosts","setState","getInputValue","event","stateObj","target","value","error","buttonClass","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","aria-label","onChange","placeholder","onClick","data-toggle","data-target","Component","TextModal","aria","VideoModal","CreatePost","toggleClass","currentState","active","ImageModal_ImageModal","TextModal_TextModal","VideoModal_VideoModal","FeedPage","fetchPosts","myPosts","filterParamChangeHandler","filterParam","isPostDeleted","fetchProfile","setItem","filteredPosts","_this$state","FeedList_FeedList","CreatePost_CreatePost_CreatePost","PeopleItem","lastPost","getPostTime","showLastPost","PeopleList","listOfPeople","users","PeopleItem_PeopleItem","SearchBar","onSearchChange","PeoplePage","fetchUsers","searchEventHandler","searchInput","_this2","filteredUsers","SearchBar_SearchBar","PeopleList_PeopleList","EditProfile","editProfileHandler","changeProfile","status","closeEditProfileHandler","errorName","errorUrl","errorDescription","getTextValue","stateName","getAvatarUrl","_this3","htmlFor","ProfilePage","fetchSingleUser","myProfile","match","params","prevProps","EditProfile_EditProfile_EditProfile","Comment","authorName","authorId","commentService","COMMENTS_ENDPOINT","comments","comment","CommentInput","onCreateCommentHandler","createComment","loadComments","CommentItem","loadSingleUser","userImage","CommentList","fetchComments","CommentInput_CommentInput","commentItemList","CommentItem_CommentItem_CommentItem","reverse","SinglePostPage","deletePostHandler","history","push","fetchSinglePost","parseInt","components_CommentList_CommentList","Header","aria-controls","aria-expanded","clear","Footer","LOGIN_ENDPOINT","loginService","loginFetch","authHeader","Login","getUsernameValue","usernameInput","getPasswordValue","passwordInput","onLoginHandler","username","password","reqStatus","sessionId","errorMessage","message","aria-describedby","withRouter","registerService","registerFetch","Register","getEmailValue","emailInput","getFullName","fullNameInput","registerStatusCheck","registerStatus","onRegisterHandler","LoginAndRegister","onRegisterTabSelect","isLoginTabActive","onLoginTabSelect","components_Login_Login","components_Register_Register","ReactDOM","render","BrowserRouter","isLoggedIn","Header_Header","Switch","Route","path","component","Footer_Footer_Footer","document","getElementById"],"mappings":"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","file":"static/js/main.ef6e60ec.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst PostImage = ({ post }) => {\r\n    const { imageUrl } = post;\r\n    return (\r\n        <img className='card-img-top' src={imageUrl} alt='post' />\r\n    );\r\n}\r\n\r\nexport {\r\n    PostImage\r\n}","import React from 'react';\r\n\r\nconst PostText = ({ post }) => {\r\n    const { text } = post;\r\n    return (\r\n        <p>{text}</p>\r\n    )\r\n}\r\n\r\nexport {\r\n    PostText\r\n}","import React from 'react';\r\n\r\nconst PostVideo = ({ post }) => {\r\n    const { videoUrl } = post;\r\n    return (\r\n        <div className=\"embed-responsive embed-responsive-16by9\">\r\n            <iframe className=\"embed-responsive-item\" src={videoUrl} allowFullScreen title='post video'></iframe>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    PostVideo\r\n}","import React from 'react';\r\n\r\nimport { PostImage } from '../view/components/FeedItem/FeedContent/PostImage';\r\nimport { PostText } from '../view/components/FeedItem/FeedContent/PostText';\r\nimport { PostVideo } from '../view/components/FeedItem/FeedContent/PostVideo';\r\n\r\n\r\nconst createFeedContent = (post) => {\r\n\r\n    if (post.isImage()) {\r\n        return (\r\n            <PostImage post={post} />\r\n        );\r\n    } else if (post.isVideo()) {\r\n        return (\r\n            <PostVideo post={post} />\r\n        );\r\n    }\r\n    return (\r\n        <PostText post={post} />\r\n    );\r\n\r\n}\r\n\r\nexport { createFeedContent };","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { createFeedContent } from '../../../shared/createFeedContent';\r\nimport './FeedItem.css';\r\n\r\nconst FeedItem = ({ post }) => {\r\n\r\n    const { commentsNum, id, type, userId } = post;\r\n\r\n    return (\r\n        <Link to={`/post-details/${type}/${id}/${userId}`} className=\"item-link\">\r\n            <div className=\"card my-4 item-decoration element-bg radius\">\r\n                <div className='p-3'>\r\n                    {createFeedContent(post)}\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <p className=\"card-text\">\r\n                        <small className=\"text-muted\">{post.getCapitalType()} post</small>\r\n                        <small className=\"text-muted float-right\">{commentsNum} <i className=\"fas fa-comments\"></i></small>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    );\r\n}\r\n\r\nexport {\r\n    FeedItem\r\n}\r\n","import React from 'react';\r\nimport { FeedItem } from '../FeedItem/FeedItem';\r\n\r\nconst FeedList = ({ posts }) => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                {posts.map((post) => {\r\n                    return <FeedItem key={post.id} post={post} />\r\n                })}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport { FeedList };","const BASE_ENDPOINT = \"https://bitbookapi.azurewebsites.net/api\";\r\n\r\nexport { BASE_ENDPOINT };\r\n","class Post {\r\n    constructor({ commentsNum, dateCreated, id, type, userDisplayName, userId }) {\r\n        this.commentsNum = commentsNum;\r\n        this.dateCreated = dateCreated;\r\n        this.id = id;\r\n        this.type = type;\r\n        this.userDisplayName = userDisplayName;\r\n        this.userId = userId;\r\n    }\r\n\r\n    isVideo() {\r\n        return this.type === \"video\"\r\n    }\r\n\r\n    isImage() {\r\n        return this.type === \"image\"\r\n    }\r\n\r\n    getCapitalType() {\r\n        return this.type.charAt(0).toUpperCase() + this.type.slice(1);\r\n    }\r\n}\r\n\r\nexport default Post;","import Post from \"./Post\";\r\n\r\nexport default class VideoPost extends Post {\r\n    constructor(post) {\r\n        super(post)\r\n        this.videoUrl = post.videoUrl;\r\n    }\r\n};","import Post from \"./Post\";\r\n\r\nexport default class ImagePost extends Post {\r\n    constructor(post) {\r\n        super(post)\r\n        this.imageUrl = post.imageUrl;\r\n    }\r\n};\r\n","import Post from \"./Post\";\r\n\r\nexport default class TextPost extends Post {\r\n    constructor(post) {\r\n        super(post)\r\n        this.text = post.text;\r\n    }\r\n};","class Headers {\r\n\r\n    getRequestHeader() {\r\n        return {\r\n            method: 'GET',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Key': 'bitbookdev',\r\n                'SessionId': sessionStorage.getItem('sessionId'),\r\n            }\r\n        }\r\n    }\r\n\r\n    postRequestHeader(data) {\r\n        return {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Key': 'bitbookdev',\r\n                'SessionId': sessionStorage.getItem('sessionId'),\r\n            },\r\n            body: JSON.stringify(data),\r\n        }\r\n    }\r\n\r\n    deleteRequestHeader() {\r\n        return {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json; charset=utf-8\",\r\n                'Key': 'bitbookdev',\r\n                'SessionId': sessionStorage.getItem('sessionId'),\r\n            },\r\n        }\r\n    }\r\n\r\n    putRequestHeader(data) {\r\n        return {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Key': 'bitbookdev',\r\n                'SessionId': sessionStorage.getItem('sessionId'),\r\n            },\r\n            body: JSON.stringify(data)\r\n\r\n        }\r\n    }\r\n\r\n    authHeader(data) {\r\n        return {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Key': 'bitbookdev'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }\r\n    }\r\n}\r\n\r\nexport const headers = new Headers();\r\n","import { BASE_ENDPOINT } from '../../shared/constants';\r\nimport VideoPost from '../../models/VideoPost';\r\nimport ImagePost from '../../models/ImagePost';\r\nimport TextPost from '../../models/TextPost';\r\n\r\nimport { headers } from '../../shared/headers';\r\n\r\nclass PostService {\r\n\r\n    fetchPosts() {\r\n        const POSTS_ENDPOINT = `${BASE_ENDPOINT}/posts`;\r\n\r\n        return fetch(POSTS_ENDPOINT, headers.getRequestHeader())\r\n            .then((response) => {\r\n                return response.json();\r\n            })\r\n            .then((result) => {\r\n\r\n                const mappedPosts = result\r\n                    .filter((post) => {\r\n                        if (post.videoUrl) {\r\n                            return post.videoUrl.includes('https://www.youtube.com/embed/');\r\n                        }\r\n                        return true;\r\n                    })\r\n                    .map((post) => {\r\n\r\n                        switch (post.type) {\r\n                            case \"image\":\r\n                                return new ImagePost(post);\r\n                            case \"video\":\r\n                                return new VideoPost(post);\r\n                            case \"text\":\r\n                                return new TextPost(post);\r\n                            default:\r\n                                throw new Error(\"Invalid post type\");\r\n                        }\r\n                    });\r\n\r\n                return mappedPosts;\r\n            });\r\n    }\r\n\r\n    fetchSinglePost(postId, postType) {\r\n\r\n        let queryParam;\r\n\r\n        switch (postType) {\r\n            case 'text':\r\n                queryParam = 'TextPosts';\r\n                break;\r\n            case 'video':\r\n                queryParam = 'VideoPosts';\r\n                break;\r\n            case 'image':\r\n                queryParam = 'ImagePosts';\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n\r\n        const POSTS_ENDPOINT = `${BASE_ENDPOINT}/${queryParam}/${postId}`;\r\n\r\n        return fetch(POSTS_ENDPOINT, headers.getRequestHeader())\r\n            .then((response) => {\r\n\r\n                return response.json();\r\n            })\r\n            .then((post) => {\r\n\r\n                switch (post.type) {\r\n                    case \"image\":\r\n                        return new ImagePost(post);\r\n                    case \"video\":\r\n                        return new VideoPost(post);\r\n                    case \"text\":\r\n                        return new TextPost(post);\r\n                    default:\r\n                        throw new Error(\"Invalid post type\");\r\n                }\r\n            })\r\n\r\n    }\r\n\r\n    createPost(data, queryParam) {\r\n        const POSTS_ENDPOINT = `${BASE_ENDPOINT}/${queryParam}`;\r\n\r\n        return fetch(POSTS_ENDPOINT, headers.postRequestHeader(data))\r\n\r\n    }\r\n\r\n    deletePost = (postId) => {\r\n\r\n        const DELETE_POST_ENDPOINT = `${BASE_ENDPOINT}/Posts/${postId}`;\r\n\r\n        return fetch(DELETE_POST_ENDPOINT, headers.deleteRequestHeader())\r\n    }\r\n\r\n}\r\n\r\nexport const postService = new PostService();","\r\nclass User {\r\n    constructor(image = 'https://via.placeholder.com/150', name, description, postNumber, commentNumber, lastPostDate, id, email) {\r\n        this.image = image;\r\n        this.name = name;\r\n        this.description = description;\r\n        this.postNumber = postNumber;\r\n        this.commentNumber = commentNumber;\r\n        this.lastPostDate = lastPostDate;\r\n        this.id = id;\r\n        this.email = email;\r\n    }\r\n//TODO\r\n    getPostTime() {\r\n        let result;\r\n\r\n        let year = this.lastPostDate.getFullYear();\r\n        let day = this.lastPostDate.getDate();\r\n        let month = this.lastPostDate.getMonth();\r\n\r\n        let currentYear = new Date().getFullYear();\r\n        let currentDay = new Date().getDate();\r\n        let currentMonth = new Date().getMonth();\r\n\r\n\r\n        if (year !== 1970) {\r\n            if (currentYear === year && currentDay === day && currentMonth === month) {\r\n                result = this.lastPostDate.toLocaleTimeString().split(\"/\").join(\".\");\r\n            } else {\r\n                result = this.lastPostDate.toLocaleString().split(\"/\").join(\".\");\r\n            }\r\n        } else {\r\n            result = false;\r\n        }\r\n        return result;\r\n    }\r\n}\r\nexport default User;","import User from \"../../models/User\";\r\nimport { headers } from \"../../shared/headers\";\r\n\r\nclass UserService {\r\n  fetchProfile() {\r\n    const PROFILE_BASE = \"https://bitbookapi.azurewebsites.net/api/profile\";\r\n    return fetch(PROFILE_BASE, headers.getRequestHeader())\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(profile => {\r\n        const {\r\n          avatarUrl,\r\n          name,\r\n          about,\r\n          postsCount,\r\n          commentsCount,\r\n          userId,\r\n          email\r\n        } = profile;\r\n        return new User(\r\n          avatarUrl,\r\n          name,\r\n          about,\r\n          postsCount,\r\n          commentsCount,\r\n          null,\r\n          userId,\r\n          email\r\n        );\r\n      });\r\n  }\r\n\r\n  fetchUsers() {\r\n    const USERS_BASE = \"https://bitbookapi.azurewebsites.net/api/users\";\r\n    return fetch(USERS_BASE, headers.getRequestHeader())\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(userList => {\r\n        return userList.map(user => {\r\n          const { id, name, aboutShort, lastPostDate, avatarUrl } = user;\r\n          const dateObj = new Date(lastPostDate);\r\n          return new User(avatarUrl, name, aboutShort, null, null, dateObj, id);\r\n        });\r\n      });\r\n  }\r\n\r\n  fetchSingleUser(userId) {\r\n    const SINGLE_USER_BASE = `https://bitbookapi.azurewebsites.net/api/users/${userId}`;\r\n    return fetch(SINGLE_USER_BASE, headers.getRequestHeader())\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(user => {\r\n        const {\r\n          userId,\r\n          name,\r\n          email,\r\n          about,\r\n          avatarUrl,\r\n          postsCount,\r\n          commentsCount\r\n        } = user;\r\n        return new User(\r\n          avatarUrl,\r\n          name,\r\n          about,\r\n          postsCount,\r\n          commentsCount,\r\n          null,\r\n          userId,\r\n          email\r\n        );\r\n      });\r\n  }\r\n\r\n  changeProfile(data) {\r\n    const PROFILE_BASE = \"https://bitbookapi.azurewebsites.net/api/Profiles\";\r\n    return fetch(PROFILE_BASE, headers.putRequestHeader(data));\r\n  }\r\n}\r\n\r\nexport const userService = new UserService();\r\n","\r\nclass ValidationService {\r\n\r\n    isTextCorrect = (text) => {\r\n\r\n        if (text.length > 2 && !text.includes('http') && !text.includes('<') && !text.includes('www')) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    isImageUrlCorrect = (url) => {\r\n\r\n        let splitUrl = url.split(\".\");\r\n        const extension = splitUrl[splitUrl.length - 1].toLowerCase();\r\n        let imageFormat = false;\r\n\r\n        switch (extension) {\r\n            case \"jpg\":\r\n            case \"png\":\r\n            case \"svg\":\r\n            case \"gif\":\r\n                imageFormat = true;\r\n                break;\r\n            default:\r\n        }\r\n\r\n        if ((url.startsWith(\"https://\") || url.startsWith(\"http://\")) && imageFormat) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    isVideoUrlCorrect = (url) => {\r\n        if ((url.startsWith(\"https://www.youtube.com\") || url.startsWith(\"http://www.youtube.com\")) && (url.includes(\"watch?v=\") || url.includes(\"embed\"))) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    isNameCorrect = (name) => {\r\n\r\n        if (name.length > 2 && name.length < 31 && !name.includes('http') && !name.includes('<') && !name.includes('www')) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nexport const validationService = new ValidationService();\r\n","import React, { Component } from 'react';\r\nimport { postService } from '../../../../services/post-service/postService';\r\nimport { validationService } from '../../../../services/validation-service/validationService';\r\n\r\n\r\nclass ImageModal extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            inputValue: \"\",\r\n            error: false,\r\n            buttonClass: \"btn button-active disabled\"\r\n        }\r\n    }\r\n\r\n    createPostHandler = () => {\r\n\r\n        const payload = {\r\n            imageUrl: this.state.inputValue\r\n        }\r\n\r\n        postService.createPost(payload, \"ImagePosts\")\r\n            .then(response => {\r\n                this.props.loadPosts();\r\n            })\r\n        this.setState({ inputValue: \"\" })\r\n    }\r\n\r\n    getInputValue = (event) => {\r\n        let stateObj;\r\n\r\n        if (validationService.isImageUrlCorrect(event.target.value)) {\r\n            stateObj = {\r\n                inputValue: event.target.value,\r\n                error: false,\r\n                buttonClass: \"btn button-active\",\r\n            }\r\n        } else {\r\n            stateObj = {\r\n                inputValue: event.target.value,\r\n                error: true,\r\n                buttonClass: \"btn button-active disabled\",\r\n            }\r\n        }\r\n\r\n        this.setState(stateObj)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"modal fade\" id=\"imageModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"exampleModalLabel\">New image post</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <input type=\"text\" className={this.state.error ? \"form-control col-11 m-3 alertInput\" : \"form-control col-11 m-3\"} value={this.state.inputValue} onChange={this.getInputValue} placeholder=\"Post image\" aria-label=\"Username\" />\r\n                            <p className=\"alertParagraph\">{this.state.error ? \"Error input\" : \"\"}</p>\r\n                            <div className=\"modal-footer\">\r\n                                <button onClick={this.createPostHandler} className={this.state.buttonClass} type=\"button\" data-toggle={this.state.error ? \"modal\" : \"\"} data-target=\"#imageModal\" >Post image</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport {\r\n    ImageModal\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport { postService } from '../../../../services/post-service/postService';\r\nimport { validationService } from '../../../../services/validation-service/validationService';\r\nimport './TextModal.css'\r\n\r\nclass TextModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            inputValue: \"\",\r\n            error: false,\r\n            buttonClass: \"btn button-active disabled\"\r\n        }\r\n    }\r\n\r\n    createPostHandler = () => {\r\n        const payload = {\r\n            text: this.state.inputValue\r\n        }\r\n        postService.createPost(payload, \"TextPosts\")\r\n            .then(response => {\r\n                this.props.loadPosts();\r\n            })\r\n        this.setState({\r\n            inputValue: \"\",\r\n            aria: \"true\"\r\n        })\r\n    }\r\n\r\n    getInputValue = (event) => {\r\n        let stateObj;\r\n\r\n        if (validationService.isTextCorrect(event.target.value)) {\r\n            stateObj = {\r\n                inputValue: event.target.value,\r\n                error: false,\r\n                buttonClass: \"btn button-active\",\r\n            }\r\n        } else {\r\n            stateObj = {\r\n                inputValue: event.target.value,\r\n                error: true,\r\n                buttonClass: \"btn button-active disabled\",\r\n            }\r\n        }\r\n        this.setState(stateObj)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"modal fade\" id=\"textModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"exampleModalLabel\">New text post</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <input type=\"text\" className={this.state.error ? \"form-control col-11 m-3 alertInput\" : \"form-control col-11 m-3\"} value={this.state.inputValue} onChange={this.getInputValue} placeholder=\"Post text\" aria-label=\"Username\" />\r\n                            <p className=\"alertParagraph\">{this.state.error ? \"Error input\" : \"\"}</p>\r\n                            <div className=\"modal-footer\">\r\n                                <button onClick={this.createPostHandler} className={this.state.buttonClass} data-toggle={this.state.error ? \"\" : \"modal\"} data-target=\"#textModal\">Post text</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport {\r\n    TextModal\r\n}\r\n","import React, { Component } from 'react';\r\nimport { postService } from '../../../../services/post-service/postService';\r\nimport './VideoModal.css';\r\nimport { validationService } from '../../../../services/validation-service/validationService';\r\nclass VideoModal extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            inputValue: \"\",\r\n            error: false,\r\n            buttonClass: \"btn button-active disabled\"\r\n        }\r\n    }\r\n\r\n    createPostHandler = () => {\r\n        const payload = {\r\n            videoUrl: this.state.inputValue\r\n        }\r\n\r\n        postService.createPost(payload, \"VideoPosts\")\r\n            .then(response => {\r\n                this.props.loadPosts();\r\n            })\r\n\r\n        this.setState({ inputValue: \"\" })\r\n    }\r\n\r\n    getInputValue = (event) => {\r\n        let stateObj;\r\n\r\n        if (validationService.isVideoUrlCorrect(event.target.value)) {\r\n            const embedVideo = event.target.value.split(\"watch?v=\").join(\"embed/\");\r\n            stateObj = {\r\n                inputValue: embedVideo,\r\n                error: false,\r\n                buttonClass: \"btn button-active\",\r\n            }\r\n        } else {\r\n            stateObj = {\r\n                inputValue: event.target.value,\r\n                error: true,\r\n                buttonClass: \"btn button-active disabled\",\r\n            }\r\n        }\r\n\r\n        this.setState(stateObj)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"modal fade\" id=\"videoModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"exampleModalLabel\">New video post</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <input type=\"text\" className={this.state.error ? \"form-control col-11 m-3 alertInput\" : \"form-control col-11 m-3\"} value={this.state.inputValue} onChange={this.getInputValue} placeholder=\"Post video\" aria-label=\"Username\" />\r\n                            <p className=\"alertParagraph\">{this.state.error ? \"Error input\" : \"\"}</p>\r\n                            <div className=\"modal-footer\">\r\n                                <button onClick={this.createPostHandler} type=\"button\" className={this.state.buttonClass} data-toggle={this.state.error ? \"modal\" : \"\"} data-target=\"#videoModal\">Post video</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport {\r\n    VideoModal\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./CreatePost.css\";\r\nimport { ImageModal } from './Modals/ImageModal';\r\nimport { TextModal } from './Modals/TextModal';\r\nimport { VideoModal } from './Modals/VideoModal';\r\n\r\nclass CreatePost extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            active: false\r\n        };\r\n    }\r\n\r\n    toggleClass = () => {\r\n        const currentState = this.state.active;\r\n        this.setState({ active: !currentState });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <ImageModal loadPosts={this.props.loadPosts} />\r\n                <TextModal loadPosts={this.props.loadPosts} />\r\n                <VideoModal loadPosts={this.props.loadPosts} />\r\n                <div className=\"buttonContainer\">\r\n                    <ul className={this.state.active ? \"list-group\" : \"list-group displayNone\"}>\r\n                        <li className=\"list-group-item buttonList border-0\">\r\n                            <button type=\"button\" className=\"btn creat-post rounded-circle buttonHeight\" data-toggle=\"modal\" data-target=\"#textModal\" onClick={this.toggleClass}><i className=\"fas fa-feather-alt\"></i></button>\r\n                        </li>\r\n                        <li className=\"list-group-item buttonList border-0\">\r\n                            <button type=\"button\" className=\"btn creat-post rounded-circle buttonHeight\" data-toggle=\"modal\" data-target=\"#imageModal\" onClick={this.toggleClass}><i className=\"fas fa-image\"></i></button>\r\n                        </li>\r\n                        <li className=\"list-group-item buttonList border-0\">\r\n                            <button type=\"button\" className=\"btn creat-post rounded-circle buttonHeight\" data-toggle=\"modal\" data-target=\"#videoModal\" onClick={this.toggleClass}><i className=\"fab fa-youtube\"></i></button>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <button type=\"button\" className=\"btn creat-post rounded-circle singleButton\" onClick={this.toggleClass}><i className=\"fas fa-plus\"></i></button>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport { CreatePost };\r\n","import React, { Component } from 'react';\r\n\r\nimport { FeedList } from '../components/FeedList/FeedList';\r\nimport { postService } from '../../services/post-service/postService';\r\nimport { userService } from '../../services/user-service/user-service';\r\nimport { CreatePost } from '../components/CreatePost/CreatePost';\r\n\r\nclass FeedPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            posts: null,\r\n            filterParam: 'all',\r\n            isPostDeleted: false\r\n        }\r\n    }\r\n\r\n    loadPosts = () => {\r\n        postService.fetchPosts()\r\n            .then((myPosts) => {\r\n\r\n            this.setState({\r\n                posts: myPosts,\r\n            });\r\n        });\r\n    }\r\n\r\n\r\n    filterParamChangeHandler = (event) => {\r\n        this.setState({\r\n            filterParam: event.target.value,\r\n        });\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n\r\n        this.loadPosts();\r\n\r\n        userService.fetchProfile()\r\n            .then((profile) => {\r\n\r\n                sessionStorage.setItem('userId', profile.id);\r\n            })\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const { posts, filterParam } = this.state;\r\n        let filteredPosts;\r\n\r\n        if (!posts) {\r\n            return (\r\n                <div className=\"sk-folding-cube\">\r\n                    <div className=\"sk-cube1 sk-cube\"></div>\r\n                    <div className=\"sk-cube2 sk-cube\"></div>\r\n                    <div className=\"sk-cube4 sk-cube\"></div>\r\n                    <div className=\"sk-cube3 sk-cube\"></div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (filterParam === 'all') {\r\n            filteredPosts = posts;\r\n        } else {\r\n            filteredPosts = posts.filter((post) => {\r\n                return post.type === filterParam\r\n            });\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div className=\"col-10\">\r\n                    <FeedList posts={filteredPosts} />\r\n                    <CreatePost loadPosts={this.loadPosts} />\r\n                </div>\r\n                <div className=\"col-2 mt-4 pr-4 h-25\">\r\n                    <select id=\"filterSelect\" className='w-100 radius' onChange={this.filterParamChangeHandler}>\r\n                        <option value=\"all\">All posts</option>\r\n                        <option value=\"text\">Text</option>\r\n                        <option value=\"image\">Images</option>\r\n                        <option value=\"video\">Videos</option>\r\n                    </select>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FeedPage;\r\n","import React from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nimport './PeoplePage.css'\r\n\r\n\r\nconst PeopleItem = ({ user }) => {\r\n    const { id, image, name, aboutShort } = user;\r\n\r\n    const lastPost = user.getPostTime();\r\n    const showLastPost = lastPost ? `Last post: ${lastPost}` : 'no posts form this user';\r\n\r\n    return (\r\n        <Link to={`/profile/${id}`} className=\"item-link\">\r\n            <div className=\"media userContainer element-bg radius item-decoration\">\r\n                <div className=\"border-r pr-3\">\r\n                    <img className=\"rounded-circle peopleImage\" src={image} alt=\"Generic placeholder\" />\r\n                </div>\r\n\r\n                <div className=\"media-body p-1\">\r\n                    <h5 className=\"mt-0 pl-3\">{name}</h5>\r\n                    <span className=\"w-75 d-inline-block pl-5\">{aboutShort}</span><span className=\"w-25 d-inline-block pl-2\">{showLastPost}</span>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    )\r\n\r\n}\r\n\r\nexport { PeopleItem };","import React from 'react';\r\n\r\n\r\nimport './PeoplePage.css'\r\nimport { PeopleItem } from './PeopleItem';\r\n\r\n\r\nconst PeopleList = ({ users }) => {\r\n\r\n    const listOfPeople = users.map((user) => {\r\n        return <PeopleItem user={user} key={user.id} />\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            {listOfPeople}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport { PeopleList };","import React from 'react';\r\n\r\nconst SearchBar = ({ onSearchChange }) => {\r\n\r\n\r\n    const onInputChange = event => onSearchChange(event.target.value)\r\n\r\n    return (\r\n        <>\r\n            <input onChange={onInputChange} className=\"form-control mt-5 w-100 radius\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\"></input>\r\n        </>\r\n    )\r\n}\r\n\r\nexport {\r\n    SearchBar\r\n}","import React, { Component } from 'react';\r\nimport { userService } from '../../../services/user-service/user-service';\r\n\r\nimport { PeopleList } from './PeopleList';\r\nimport { SearchBar } from './SearchBar';\r\n\r\nimport './PeoplePage.css'\r\n\r\n\r\nclass PeoplePage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            users: \"\",\r\n            searchInput: \"\"\r\n        }\r\n    }\r\n\r\n    fetchUsers = () => {\r\n\r\n        userService.fetchUsers()\r\n            .then(users => {\r\n                this.setState({ users })\r\n            })\r\n    }\r\n\r\n\r\n    searchEventHandler = (inputValue) => {\r\n        this.setState({ searchInput: inputValue })\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.fetchUsers();\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        if (!this.state.users) {\r\n            return (\r\n                <div className=\"sk-folding-cube\">\r\n                    <div className=\"sk-cube1 sk-cube\"></div>\r\n                    <div className=\"sk-cube2 sk-cube\"></div>\r\n                    <div className=\"sk-cube4 sk-cube\"></div>\r\n                    <div className=\"sk-cube3 sk-cube\"></div>\r\n                </div>\r\n            );\r\n        }\r\n        const filteredUsers = this.state.users.filter(user => {\r\n            return user.name.toLowerCase().includes(this.state.searchInput.toLowerCase());\r\n        })\r\n\r\n        return (\r\n\r\n            <div className='col-10 offset-1'>\r\n                <SearchBar onSearchChange={this.searchEventHandler} />\r\n                <PeopleList users={filteredUsers} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PeoplePage;","import React, { Component } from 'react';\r\n\r\nimport { userService } from '../../../services/user-service/user-service';\r\nimport { validationService } from '../../../services/validation-service/validationService';\r\n\r\nimport './EditProfile.css';\r\n\r\nclass EditProfile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: '',\r\n            email: null,\r\n            aboutShort: null,\r\n            description: '',\r\n            avatarUrl: '',\r\n            errorName: false,\r\n            errorUrl: false,\r\n            errorDescription: false,\r\n            buttonClass: 'btn btn-primary disabled'\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        userService.fetchProfile()\r\n            .then((profile) => {\r\n                this.setState({\r\n                    name: profile.name,\r\n                    email: profile.email,\r\n                    aboutShort: profile.aboutShort,\r\n                    description: profile.description,\r\n                    avatarUrl: profile.image\r\n                })\r\n            })\r\n    }\r\n\r\n    editProfileHandler = () => {\r\n        const payload = {\r\n            name: this.state.name,\r\n            email: this.state.email,\r\n            aboutShort: this.state.description.slice(0, 10),\r\n            about: this.state.description,\r\n            avatarUrl: this.state.avatarUrl\r\n        }\r\n\r\n        userService.changeProfile(payload)\r\n            .then((response) => {\r\n                if (response.status >= 200 && response.status < 300) {\r\n                    \r\n                    this.props.fetchProfile(this.props.userId);\r\n                }\r\n            });\r\n    }\r\n\r\n    closeEditProfileHandler = () => {\r\n        userService.fetchProfile()\r\n            .then((profile) => {\r\n                this.setState({\r\n                    name: profile.name,\r\n                    email: profile.email,\r\n                    aboutShort: profile.aboutShort,\r\n                    description: profile.description,\r\n                    avatarUrl: profile.image,\r\n                    errorName: false,\r\n                    errorUrl: false,\r\n                    errorDescription: false\r\n                })\r\n            })\r\n    }\r\n\r\n    getTextValue = (event, stateName) => {\r\n        let stateObj;\r\n        const inputValue = event.target.value;\r\n\r\n        if (stateName === 'name') {\r\n\r\n            if (validationService.isNameCorrect(inputValue)) {\r\n                stateObj = {\r\n                    name: event.target.value,\r\n                    errorName: false,\r\n                    buttonClass: 'btn btn-primary'\r\n                }\r\n            } else {\r\n                stateObj = {\r\n                    name: event.target.value,\r\n                    errorName: true,\r\n                    buttonClass: 'btn btn-primary disabled'\r\n                }\r\n            }\r\n        } else {\r\n\r\n            if (validationService.isTextCorrect(inputValue)) {\r\n                stateObj = {\r\n                    description: event.target.value,\r\n                    errorDescription: false,\r\n                    buttonClass: 'btn btn-primary'\r\n                }\r\n            } else {\r\n                stateObj = {\r\n                    description: event.target.value,\r\n                    errorDescription: true,\r\n                    buttonClass: 'btn btn-primary disabled'\r\n                }\r\n            }\r\n        }\r\n\r\n        this.setState(stateObj);\r\n    }\r\n\r\n    getAvatarUrl = (event) => {\r\n        let stateObj;\r\n\r\n        if (validationService.isImageUrlCorrect(event.target.value)) {\r\n            stateObj = {\r\n                avatarUrl: event.target.value,\r\n                errorUrl: false,\r\n                buttonClass: 'btn btn-primary'\r\n            }\r\n        } else {\r\n            stateObj = {\r\n                avatarUrl: event.target.value,\r\n                errorUrl: true,\r\n                buttonClass: 'btn btn-primary disabled'\r\n            }\r\n        }\r\n\r\n        this.setState(stateObj)\r\n    }\r\n\r\n    render() {\r\n        let error;\r\n        if (this.state.errorName || this.state.errorUrl || this.state.errorDescription) {\r\n            error = true;\r\n        } else {\r\n            error = false;\r\n        }\r\n\r\n        return (\r\n            <div className=\"modal fade\" id=\"editProfile\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header border-0 p-2\">\r\n                            <h5 className=\"modal-title\" id=\"exampleModalLongTitle\">Update profile</h5>\r\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={this.closeEditProfileHandler}>\r\n                                <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"modal-body p-2\">\r\n                            <div className=\"container-fluid\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-4 col-sm-12\">\r\n                                        <img className=\"my-0 mx-auto w-100\" src={this.state.errorUrl ? \"http://thepalmsofmobay.com/admin/framework/img/user2-160x160.jpg\" : this.state.avatarUrl} alt=\"Generic placeholder\" />\r\n                                        <button type=\"button\" className=\"btn btn-primary mt-2\">UPLOAD PHOTO</button>\r\n                                    </div>\r\n                                    <div className=\"col-md-8 col-sm-12 mt-4\">\r\n                                        <label htmlFor=\"user-name\" className=\"col-form-label\">Name:</label>\r\n                                        <input type=\"text\" className={this.state.errorName ? \"form-control alertInputName\" : \"form-control\"} onChange={(event) => { this.getTextValue(event, 'name') }} value={this.state.name} id=\"user-name\" />\r\n                                        <p className=\"alertParagraph\">{this.state.errorName ? `${this.state.name.length}/30` : \"\"}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <label htmlFor=\"avatar-url\" className=\"col-form-label\">Avatar URL:</label>\r\n                                        <input type=\"text\" className={this.state.errorUrl ? \"form-control alertInputUrl\" : \"form-control\"} onChange={this.getAvatarUrl} aria-label=\"Username\" value={this.state.avatarUrl} id=\"avatar-url\" />\r\n                                        <p className=\"alertParagraph\">{this.state.errorUrl ? \"Error input\" : \"\"}</p>\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <label htmlFor=\"user-description\" className=\"col-form-label\">Description:</label>\r\n                                        <input type=\"text\" className={this.state.errorDescription ? \"form-control alertInputDescription\" : \"form-control\"} onChange={(event) => { this.getTextValue(event, 'description') }} value={this.state.description} id=\"user-description\" />\r\n                                        <p className=\"alertParagraph\">{this.state.errorDescription ? \"Error input\" : \"\"}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-footer border-0 p-2\">\r\n                            <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\" onClick={this.closeEditProfileHandler}>CLOSE</button>\r\n                            <button type=\"button\" className={this.state.buttonClass} onClick={error ? null : this.editProfileHandler} data-toggle={error ? \"\" : \"modal\"} data-target=\"#editProfile\">UPDATE</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport {\r\n    EditProfile\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport { userService } from '../../../services/user-service/user-service.js';\r\n\r\nimport './ProfilePage.css'\r\nimport { EditProfile } from '../../components/EditProfile/EditProfile.js';\r\n\r\nclass ProfilePage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            myProfile: {},\r\n            userId: this.props.match.params.userId\r\n        }\r\n    }\r\n\r\n    fetchProfile = (userId) => {\r\n        userService.fetchSingleUser(userId)\r\n            .then(myProfile => {\r\n                this.setState({\r\n                    myProfile,\r\n                    userId: userId\r\n                })\r\n            })\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n\r\n        if (prevProps.match.params.userId !== this.props.match.params.userId) {\r\n            this.fetchProfile(this.props.match.params.userId)\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchProfile(this.props.match.params.userId)\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            <EditProfile fetchProfile={this.fetchProfile} userId={this.state.userId} />\r\n                <div className=\"jumbotron mt-5 col-10 mx-auto element-bg radius d-flex flex-column justify-content-center\">\r\n                    <img src={this.state.myProfile.image} alt=\"profileImage\" className=\"profileImage rounded-circle\" />\r\n                    <h1 className=\"display-4 text-center\">{this.state.myProfile.name}</h1>\r\n                    {\r\n                        this.state.userId === sessionStorage.getItem('userId') ?\r\n                            <button className=\"btn button-active my-4 w-25 mx-auto\" data-toggle=\"modal\" data-target=\"#editProfile\"><i className=\"fas fa-user-edit\"></i></button>\r\n                            : null\r\n                    }\r\n                    <p className=\"text-center border-t pt-4\">{this.state.myProfile.description}</p>\r\n                    <p className=\"lead text-center\">\r\n                        <button className=\"btn button-active btn-lg m-3 item-decoration\">{this.state.myProfile.postNumber} posts</button>\r\n                        <button className=\"btn button-active btn-lg item-decoration\">{this.state.myProfile.commentNumber} comments</button>\r\n                    </p>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProfilePage;\r\n","class Comment {\r\n    constructor(id, body, postId, authorName, authorId) {\r\n        this.id = id;\r\n        this.body = body;\r\n        this.postId = postId;\r\n        this.authorName = authorName;\r\n        this.authorId = authorId;\r\n    }\r\n};\r\n\r\nexport default Comment;\r\n","import { BASE_ENDPOINT } from '../../shared/constants';\r\nimport Comment from '../../models/Comment';\r\nimport { headers } from '../../shared/headers';\r\n\r\nclass CommentService {\r\n\r\n    fetchComments(postId) {\r\n\r\n        const COMMENTS_ENDPOINT = `${BASE_ENDPOINT}/comments?postId=${postId}`;\r\n\r\n        return fetch(COMMENTS_ENDPOINT, headers.getRequestHeader())\r\n            .then((response) => {\r\n\r\n                return response.json();\r\n            })\r\n            .then((comments) => {\r\n\r\n                const mappedComments = comments.map((comment) => {\r\n                    return new Comment(comment.id, comment.body, comment.postId, comment.authorName, comment.authorId);\r\n                });\r\n                return mappedComments;\r\n            });\r\n    }\r\n\r\n    createComment(data) {\r\n        const POSTS_ENDPOINT = `${BASE_ENDPOINT}/Comments`;\r\n\r\n        return fetch(POSTS_ENDPOINT, headers.postRequestHeader(data))\r\n    }\r\n}\r\n\r\nexport const commentService = new CommentService();\r\n","import React, { Component } from 'react';\r\nimport { commentService } from '../../../services/comment-service/commentService';\r\n\r\n\r\nclass CommentInput extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            postId: this.props.postId,\r\n            inputValue: '',\r\n            buttonClass: \"btn button-active disabled\"\r\n        }\r\n    }\r\n\r\n    getInputValue = (event) => {\r\n        let stateObj;\r\n        if (!event.target.value.includes(\"http\") && event.target.value.length >= 3 && !event.target.value.includes(\"<\") && !event.target.value.includes(\"www\")) {\r\n            stateObj = {\r\n                inputValue: event.target.value,\r\n                buttonClass: \"btn button-active\",\r\n            }\r\n        } else {\r\n            stateObj = {\r\n                inputValue: event.target.value,\r\n                buttonClass: \"btn button-active disabled\",\r\n            }\r\n        }\r\n        this.setState(stateObj);\r\n    }\r\n\r\n    onCreateCommentHandler = () => {\r\n        const payload = {\r\n            'body': this.state.inputValue,\r\n            'postId': this.state.postId\r\n        }\r\n\r\n        commentService.createComment(payload)\r\n            .then((response) => {\r\n                this.props.loadComments();\r\n            })\r\n\r\n        this.setState({\r\n            inputValue: ''\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='mt-4 px-4 input-group-prepend'>\r\n                <input className='form-control' type=\"text\" placeholder='Add your comment...' onChange={this.getInputValue} value={this.state.inputValue} />\r\n                <input type=\"button\" value='SEND' className={this.state.buttonClass} onClick={this.onCreateCommentHandler} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport { CommentInput };","import React, { Component } from 'react';\r\nimport { userService } from '../../../services/user-service/user-service';\r\nimport './CommentItem.css';\r\n\r\nclass CommentItem extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            userId: this.props.comment.authorId,\r\n            userImage: \"\"\r\n        }\r\n    }\r\n\r\n\r\n    loadSingleUser = () => {\r\n        userService.fetchSingleUser(this.state.userId)\r\n            .then(user => {\r\n                this.setState({ userImage: user.image })\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadSingleUser();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <li className=\"media my-4 p-2 border row element-bg radius\" >\r\n                <div className=\"col-3 border-r\">\r\n                    <img className=\"mr-3 w-100 rounded-circle\" src={this.state.userImage} alt=\"Generic placeholder\" />\r\n                </div>\r\n                <div className=\"media-body col-9\">\r\n                    <h5 className=\"mt-0 mb-1\">{this.props.comment.authorName}</h5>\r\n                    {this.props.comment.body}\r\n                </div>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nexport {\r\n    CommentItem\r\n}","import React, { Component } from 'react';\r\n\r\nimport { CommentInput } from '../CommentInput/CommentInput';\r\nimport { CommentItem } from '../CommentItem/CommentItem';\r\nimport { commentService } from '../../../services/comment-service/commentService';\r\n\r\n\r\n\r\nclass CommentList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            comments: null,\r\n        }\r\n    }\r\n\r\n    loadComments = () => {\r\n        commentService.fetchComments(this.props.postId)\r\n            .then((comments) => {\r\n                this.setState({\r\n                    comments\r\n                })\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadComments();\r\n    }\r\n\r\n    render() {\r\n\r\n        const { comments } = this.state;\r\n\r\n        if (!comments) {\r\n            return (\r\n                <div className=\"sk-folding-cube\">\r\n                    <div className=\"sk-cube1 sk-cube\"></div>\r\n                    <div className=\"sk-cube2 sk-cube\"></div>\r\n                    <div className=\"sk-cube4 sk-cube\"></div>\r\n                    <div className=\"sk-cube3 sk-cube\"></div>\r\n                </div>\r\n            );\r\n        }\r\n        if (!comments.length) {\r\n            return (\r\n                <>\r\n                    <CommentInput postId={this.props.postId} loadComments={this.loadComments} />\r\n                    <div className=\"element-bg radius p-4 mt-4 mx-2\">\r\n                        <h3 className='text-center'>\r\n                            No comments! Be the first one to commment this post <i className=\"far fa-grin-wink\"></i>\r\n                        </h3>\r\n                    </div>\r\n                </>\r\n            )\r\n        }\r\n\r\n        const commentItemList = comments.map((comment) => {\r\n            return <CommentItem key={comment.id} comment={comment} />\r\n        })\r\n        return (\r\n            <>\r\n                <CommentInput postId={this.props.postId} loadComments={this.loadComments} />\r\n                <ul className=\"list-unstyled my-4 px-4\" >\r\n                    {commentItemList.reverse()}\r\n                </ul>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CommentList;\r\n","import React, { Component } from 'react';\r\n\r\nimport { postService } from '../../services/post-service/postService';\r\n\r\nimport { createFeedContent } from '../../shared/createFeedContent';\r\nimport CommentList from '../components/CommentList/CommentList';\r\n\r\n\r\nclass SinglePostPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            postId: this.props.match.params.postId,\r\n            postType: this.props.match.params.postType,\r\n            post: null,\r\n            comments: null\r\n        }\r\n\r\n    }\r\n\r\n    deletePostHandler = () => {\r\n        postService.deletePost(this.state.postId)\r\n            .then(response => {\r\n                this.props.history.push('/feed')\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { postId, postType } = this.state;\r\n\r\n        postService.fetchSinglePost(postId, postType)\r\n            .then((post) => {\r\n                this.setState({\r\n                    post\r\n                })\r\n            });\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { post } = this.state;\r\n\r\n        if (!post) {\r\n            return (\r\n                <div className=\"sk-folding-cube\">\r\n                    <div className=\"sk-cube1 sk-cube\"></div>\r\n                    <div className=\"sk-cube2 sk-cube\"></div>\r\n                    <div className=\"sk-cube4 sk-cube\"></div>\r\n                    <div className=\"sk-cube3 sk-cube\"></div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className=\"col-10 offset-1\">\r\n                <div className='mt-4 p-4 border element-bg radius'>\r\n                    {createFeedContent(post)}\r\n                    {post.userId === parseInt(sessionStorage.getItem(\"userId\")) ? <button className='btn button-delete mt-3' onClick={this.deletePostHandler}><i className=\"fas fa-trash-alt\"></i></button> : null}\r\n                </div>\r\n                <CommentList postId={this.state.postId} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SinglePostPage;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n  const logoutHandler = () => {\r\n    sessionStorage.clear();\r\n  };\r\n\r\n  return (\r\n    <header className=\"container-fluid primary-color navbar-dark\">\r\n      <nav className=\"navbar navbar-expand-lg navbar-dark primary-color container\">\r\n        <Link className=\"navbar-brand\" to=\"/feed\">\r\n          BIT <i className=\"fas fa-book-open\" /> BOOK\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\" />\r\n        </button>\r\n\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav ml-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/feed\">\r\n                <i className=\"fas fa-newspaper\" />\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/people\">\r\n                <i className=\"fas fa-users\" />\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link\r\n                className=\"nav-link\"\r\n                to={`/profile/${sessionStorage.getItem(\"userId\")}`}\r\n              >\r\n                <i className=\"fas fa-user\" />\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to={`/`} onClick={logoutHandler}>\r\n                <i className=\"fas fa-sign-out-alt\" />\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport { Header };\r\n","import React from 'react';\r\n\r\nimport './Footer.css';\r\n\r\nconst Footer = () => {\r\n\r\n    return (\r\n        <footer className='button-active'>\r\n            <p className='container button-active'>&copy;{new Date().getFullYear()} Four in for</p>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport { Footer };","import { headers } from \"../../shared/headers\";\r\n\r\nconst LOGIN_ENDPOINT = \"https://bitbookapi.azurewebsites.net/api/login\";\r\n\r\nclass LoginService {\r\n  loginFetch = data => {\r\n    return fetch(LOGIN_ENDPOINT, headers.authHeader(data));\r\n  };\r\n\r\n  isLoggedIn() {\r\n    return sessionStorage.getItem(\"sessionId\");\r\n  }\r\n}\r\n\r\nexport const loginService = new LoginService();\r\n","import React, { Component } from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { loginService } from '../../../services/login-service/login-service';\r\n\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            usernameInput: '',\r\n            passwordInput: '',\r\n            errorMessage: '',\r\n            reqStatus: false,\r\n        }\r\n    }\r\n\r\n    getUsernameValue = (event) => {\r\n        let stateObj;\r\n        stateObj = {\r\n            usernameInput: event.target.value,\r\n        }\r\n\r\n        this.setState(stateObj);\r\n    }\r\n\r\n    getPasswordValue = (event) => {\r\n        let stateObj;\r\n        stateObj = {\r\n            passwordInput: event.target.value,\r\n        }\r\n\r\n        this.setState(stateObj)\r\n    }\r\n\r\n    onLoginHandler = () => {\r\n        const payload = {\r\n            username: this.state.usernameInput,\r\n            password: this.state.passwordInput,\r\n        }\r\n        loginService.loginFetch(payload)\r\n            .then((response) => {\r\n\r\n                if (response.status >= 200 && response.status < 300) {\r\n                    this.setState({\r\n                        reqStatus: true,\r\n                    });\r\n                }\r\n                return response.json();\r\n            })\r\n            .then((response) => {\r\n\r\n                if (this.state.reqStatus === true) {\r\n                    \r\n                    sessionStorage.setItem('sessionId', response.sessionId);\r\n                    this.props.history.push('/feed');\r\n                } else {\r\n                    this.setState({\r\n                        errorMessage: response.error.message,\r\n                    })\r\n                }\r\n            })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"username\">Username</label>\r\n                    <input type=\"text\" className=\"form-control\" id=\"username\" aria-describedby=\"emailHelp\" placeholder=\"Username\" onChange={this.getUsernameValue} />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">{this.state.errorMessage}</small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input type=\"password\" className=\"form-control\" id=\"password\" placeholder=\"Password\" onChange={this.getPasswordValue} />\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn button-active col-12\" onClick={this.onLoginHandler}>Login</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Login);","import { headers } from \"../../shared/headers\";\r\n\r\nconst REGISTER_ENDPOINT = \"https://bitbookapi.azurewebsites.net/api/register\";\r\n\r\nclass RegisterService {\r\n  registerFetch = data => {\r\n    return fetch(REGISTER_ENDPOINT, headers.authHeader(data));\r\n  };\r\n}\r\n\r\nexport const registerService = new RegisterService();\r\n","import React, { Component } from 'react';\r\nimport { registerService } from '../../../services/register-service/register-service';\r\n\r\n\r\n\r\nclass Register extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n\r\n        this.state = {\r\n            usernameInput: '',\r\n            passwordInput: '',\r\n            emailInput: '',\r\n            fullNameInput: '',\r\n            registerStatus: false,\r\n        }\r\n    }\r\n    getUsernameValue = (event) => {\r\n        let stateObj;\r\n        stateObj = {\r\n            usernameInput: event.target.value,\r\n        }\r\n\r\n        this.setState(stateObj);\r\n    }\r\n    getPasswordValue = (event) => {\r\n        let stateObj;\r\n        stateObj = {\r\n            passwordInput: event.target.value,\r\n        }\r\n\r\n        this.setState(stateObj)\r\n    }\r\n    getEmailValue = (event) => {\r\n        let stateObj;\r\n        stateObj = {\r\n            emailInput: event.target.value,\r\n        }\r\n\r\n        this.setState(stateObj)\r\n    }\r\n    getFullName = (event) => {\r\n        let stateObj;\r\n\r\n        stateObj = {\r\n            fullNameInput: event.target.value,\r\n        }\r\n\r\n        this.setState(stateObj)\r\n    }\r\n\r\n    registerStatusCheck = () => {\r\n        this.setState({\r\n            registerStatus: true,\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n    onRegisterHandler = () => {\r\n        const payload = {\r\n            username: this.state.usernameInput,\r\n            password: this.state.passwordInput,\r\n            name: this.state.fullNameInput,\r\n            email: this.state.emailInput,\r\n        }\r\n//TODO\r\n        registerService.registerFetch(payload)\r\n            .then((response) => {\r\n                if (response.status >= 200 && response.status < 300) {\r\n\r\n                    this.registerStatusCheck();\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"username\" >Username</label>\r\n                    <input type=\"text\" onChange={this.getUsernameValue} className=\"form-control\" id=\"username\" aria-describedby=\"emailHelp\" placeholder=\"Enter username\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"fullname\" >FullName</label>\r\n                    <input type=\"text\" onChange={this.getFullName} className=\"form-control\" id=\"fullname\" aria-describedby=\"emailHelp\" placeholder=\"Enter full name\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"email\" >Email address</label>\r\n                    <input type=\"email\" onChange={this.getEmailValue} className=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"password\" >Password</label>\r\n                    <input type=\"password\" onChange={this.getPasswordValue} className=\"form-control\" id=\"password\" placeholder=\"Password\" />\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn button-active col-12\" onClick={this.onRegisterHandler}>Register</button>\r\n                <small id=\"emailHelp\" className=\"form-text text-muted\">{this.state.registerStatus ? 'Succses! You can login now!' : ''}</small>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Register;","import React, { Component } from 'react';\r\n\r\nimport Login from '../../components/Login/Login';\r\nimport Register from '../../components/Register/Register';\r\n\r\nimport './LoginAndRegister.css';\r\n\r\n\r\nclass LoginAndRegister extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            isLoginTabActive: true\r\n\r\n        }\r\n    }\r\n\r\n\r\n    onRegisterTabSelect = () => {\r\n        this.setState({ isLoginTabActive: false })\r\n    }\r\n\r\n    onLoginTabSelect = () => {\r\n        this.setState({ isLoginTabActive: true })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"row m-5 p-4 element-bg radius\">\r\n                    <div className=\"col-5\">\r\n                        <h3>{this.state.isLoginTabActive ? \"BitBook Login\" : \"BitBook Register\"}</h3>\r\n                        <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p>\r\n                    </div>\r\n                    <div className=\"offset-1 col-6 border-l pl-5\">\r\n                        <nav className=\"nav nav-pills nav-justified row px-3\">\r\n                            <p className={this.state.isLoginTabActive ? \"nav-item nav-link button-active col-6\" : \"nav-item nav-link col-6\"} onClick={this.onLoginTabSelect}>Login</p>\r\n                            <p className={this.state.isLoginTabActive ? \"nav-item nav-link col-6\" : \"nav-item nav-link button-active col-6\"} onClick={this.onRegisterTabSelect}>Register</p>\r\n                        </nav>\r\n\r\n                        {this.state.isLoginTabActive ? <Login /> : <Register />}\r\n                    </div>\r\n                </div>\r\n            </>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default LoginAndRegister;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './view/App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport \"jquery/dist/jquery.min.js\";\r\nimport \"popper.js/dist/popper.min.js\";\r\nimport \"bootstrap/dist/js/bootstrap.min.js\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>,\r\n    document.getElementById(\"root\")\r\n);\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport FeedPage from './pages/FeedPage';\r\nimport PeoplePage from './pages/PeoplePage/PeoplePage';\r\nimport ProfilePage from './pages/ProfilePage/ProfilePage';\r\nimport SinglePostPage from './pages/SinglePostPage';\r\nimport { Header } from './components/Header/Header';\r\nimport { Footer } from './components/Footer/Footer';\r\nimport LoginAndRegister from './pages/LoginAndRegister/LoginAndRegister';\r\n\r\nimport { loginService } from '../services/login-service/login-service';\r\n\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n\r\n  const loggedContent = () => {\r\n    return (\r\n      <>\r\n        <Header />\r\n        <main className='container'>\r\n          <div className='row'>\r\n            <Switch>\r\n              <Route path='/post-details/:postType/:postId' component={SinglePostPage} />\r\n              <Route path='/profile/:userId' component={ProfilePage} />\r\n              <Route path='/people' component={PeoplePage} />\r\n              <Route path='/feed' component={FeedPage} />\r\n              <Route path='/' component={FeedPage} />\r\n            </Switch>\r\n          </div>\r\n        </main>\r\n        <Footer />\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {\r\n        loginService.isLoggedIn() ? \r\n        loggedContent() :\r\n        <Route path='/' component={LoginAndRegister} />\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport { App };\r\n"],"sourceRoot":""}